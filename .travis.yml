sudo: required

language: python

env:
  DOCKER_COMPOSE_VERSION: 1.24.1

os:
  - linux

branches:
  only:
    - master
    - develop

python:
  - 3.6

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - docker-compose up -d --build


script:
  - git clone -b features/wms-monitor https://github.com/panoptes-organization/snakemake
  # - cd snakemake
  # - virtualenv -p `which python3` venv_snakemake_develop
  # - source venv_snakemake_develop/bin/activate
  - conda create -n snakemake_develop -c conda-forge mamba
  - conda activate snakemake_develop
  - pip install .
  - cd ..
  - git clone https://github.com/panoptes-organization/snakemake_example_workflow.git
  - cd snakemake_example_workflow
  - sed -i 's/5000/8000/g' run_local.sh
  - bash run_local.sh
  - cd ../
  - conda deactivate
  - virtualenv -p `which python3` venv_test
  - source venv_test/bin/activate
  - pip install -U 'requests==2.22.0' 'pytest'
  - py.test tests/api_test.py --ignore server/
  - deactivate

after_script:
  - docker-compose down
